{"remainingRequest":"/Users/pelirodri/Documents/laweavuetesting/node_modules/thread-loader/dist/cjs.js!/Users/pelirodri/Documents/laweavuetesting/node_modules/ts-loader/index.js??ref--12-2!/Users/pelirodri/Documents/laweavuetesting/src/components/TheMainSection/interpreter.worker.ts","dependencies":[{"path":"/Users/pelirodri/Documents/laweavuetesting/src/components/TheMainSection/interpreter.worker.ts","mtime":1567446101342},{"path":"/Users/pelirodri/Documents/laweavuetesting/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pelirodri/Documents/laweavuetesting/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pelirodri/Documents/laweavuetesting/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nconst ctx = self;\nlet readCommandIndex = -1;\nconst cells = [0n];\nlet currentCell = 0;\nlet isCopySet = false;\nlet cellValueCopy = 0n;\nvar Command;\n(function (Command) {\n    Command[\"maric\\u00F3n\"] = \"maric\\u00F3n\";\n    Command[\"maraco\"] = \"maraco\";\n    Command[\"we\\u00F3n\"] = \"we\\u00F3n\";\n    Command[\"aweonao\"] = \"aweonao\";\n    Command[\"maraca\"] = \"maraca\";\n    Command[\"chucha\"] = \"chucha\";\n    Command[\"puta\"] = \"puta\";\n    Command[\"pichula\"] = \"pichula\";\n    Command[\"tula\"] = \"tula\";\n    Command[\"pico\"] = \"pico\";\n    Command[\"ctm\"] = \"ctm\";\n    Command[\"qu\\u00E9we\\u00E1\"] = \"qu\\u00E9we\\u00E1\";\n    Command[\"ch\\u00FApala\"] = \"ch\\u00FApala\";\n    Command[\"br\\u00EDgido\"] = \"br\\u00EDgido\";\n    Command[\"perkin\"] = \"perkin\";\n    Command[\"mierda\"] = \"mierda\";\n})(Command || (Command = {}));\nctx.onmessage = e => {\n    for (let i = readCommandIndex !== -1 ? readCommandIndex : 0; i < e.data.commands.length; i++) {\n        switch (e.data.commands[i]) {\n            case Command.maricón:\n                cells[currentCell]--;\n                break;\n            case Command.maraco:\n                cells[currentCell] -= 2n;\n                break;\n            case Command.weón:\n                cells[currentCell]++;\n                break;\n            case Command.aweonao:\n                cells[currentCell] += 2n;\n                break;\n            case Command.maraca:\n                cells[currentCell] = 0n;\n                break;\n            case Command.chucha:\n                if (!currentCell) {\n                    ctx.postMessage({\n                        errorMessage: \"Te saliste pa la izquierda, aweonao\"\n                    });\n                }\n                currentCell--;\n                break;\n            case Command.puta:\n                if (++currentCell === cells.length) {\n                    cells[currentCell] = 0n;\n                }\n                break;\n            case Command.pichula:\n                if (!cells[currentCell]) {\n                    i = findLoopEnd(e.data.commands, i);\n                }\n                break;\n            case Command.tula:\n                if (cells[currentCell]) {\n                    i = findLoopStart(e.data.commands, i);\n                }\n                break;\n            case Command.pico:\n                i = findLoopEnd(e.data.commands, i);\n                break;\n            case Command.ctm:\n                let output = \"?\";\n                if (cells[currentCell] >= 0x0 && cells[currentCell] <= 0x10FFFF) {\n                    output = String.fromCodePoint(Number(cells[currentCell]));\n                }\n                ctx.postMessage({\n                    output\n                });\n                break;\n            case Command.quéweá:\n                /*\n                if (this.readCommandIndex !== -1) {\n                    this.isInputDisabled = true;\n                    this.readCommandIndex = -1;\n\n                    if (this.input.length === 1 || this.input.length === 2) {\n                        const codePoint = this.input.codePointAt(0);\n\n                        if (this.input.length === 1 || codePoint! >= 0x10000) {\n                            this.cells[this.currentCell] = BigInt(codePoint);\n                            break;\n                        }\n                    }\n\n                    this.cells[this.currentCell] = 0n;\n                } else {\n                    this.isInputDisabled = false;\n                    this.readCommandIndex = i;\n\n                    return;\n                }\n                 */\n                break;\n            case Command.chúpala:\n                ctx.postMessage({\n                    output: cells[currentCell].toString()\n                });\n                break;\n            case Command.brígido:\n                if (e.data.input) {\n                    ctx.postMessage({\n                        isInputDisabled: true\n                    });\n                    readCommandIndex = -1;\n                    if (e.data.input.match(/^-?\\d{1,19}$/)) {\n                        const bigInput = BigInt(e.data.input);\n                        if (bigInput >= -9223372036854775808n && bigInput <= 9223372036854775807n) {\n                            cells[currentCell] = bigInput;\n                            break;\n                        }\n                    }\n                    cells[currentCell] = 0n;\n                }\n                else {\n                    ctx.postMessage({\n                        isInputDisabled: false\n                    });\n                    readCommandIndex = i;\n                    return;\n                }\n                /*\n                if (this.readCommandIndex !== -1) {\n                    this.isInputDisabled = true;\n                    this.readCommandIndex = -1;\n\n                    if (this.input.match(/^-?\\d{1,19}$/)) {\n                        const bigInput = BigInt(this.input);\n\n                        if (bigInput >= -9223372036854775808n && bigInput <= 9223372036854775807n) {\n                            cells[currentCell] = bigInput;\n                            break;\n                        }\n                    }\n\n                    cells[currentCell] = 0n;\n                } else {\n                    this.isInputDisabled = false;\n                    this.readCommandIndex = i;\n\n                    return;\n                }\n                 */\n                break;\n            case Command.perkin:\n                if (isCopySet) {\n                    cells[currentCell] = cellValueCopy;\n                    isCopySet = false;\n                }\n                else {\n                    cellValueCopy = cells[currentCell];\n                    isCopySet = true;\n                }\n                break;\n            case Command.mierda:\n                return;\n        }\n    }\n    function findLoopStart(commands, i) {\n        for (let j = i - 1, loopLevel = 1; j >= 0; j--) {\n            if (commands[j] === \"tula\") {\n                loopLevel++;\n            }\n            else if (commands[j] === \"pichula\") {\n                loopLevel--;\n            }\n            if (!loopLevel) {\n                return j;\n            }\n        }\n        return -1;\n    }\n    function findLoopEnd(commands, i) {\n        for (let j = i + 1, loopLevel = 1; j < commands.length; j++) {\n            if (commands[j] === \"pichula\") {\n                loopLevel++;\n            }\n            else if (commands[j] === \"tula\") {\n                loopLevel--;\n            }\n            if (!loopLevel) {\n                return j;\n            }\n        }\n        return -1;\n    }\n};\n",{"version":3,"file":"/Users/pelirodri/Documents/laweavuetesting/src/components/TheMainSection/interpreter.worker.ts","sourceRoot":"","sources":["/Users/pelirodri/Documents/laweavuetesting/src/components/TheMainSection/interpreter.worker.ts"],"names":[],"mappings":"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","sourcesContent":["const ctx: Worker = self as any;\n\nlet readCommandIndex = -1;\n\nconst cells = [0n];\nlet currentCell = 0;\n\nlet isCopySet = false;\nlet cellValueCopy = 0n;\n\nenum Command {\n\tmaricón = \"maricón\",\n\tmaraco = \"maraco\",\n\tweón = \"weón\",\n\taweonao = \"aweonao\",\n\tmaraca = \"maraca\",\n\tchucha = \"chucha\",\n\tputa = \"puta\",\n\tpichula = \"pichula\",\n\ttula = \"tula\",\n\tpico = \"pico\",\n\tctm = \"ctm\",\n\tquéweá = \"quéweá\",\n\tchúpala = \"chúpala\",\n\tbrígido = \"brígido\",\n\tperkin = \"perkin\",\n\tmierda = \"mierda\"\n}\n\nctx.onmessage = e => {\n\tfor (let i = readCommandIndex !== -1 ? readCommandIndex : 0; i < e.data.commands.length; i++) {\t\t\t\t\t\t\t\t\t\n\t\tswitch (e.data.commands[i]) {\n\t\t\tcase Command.maricón:\n\t\t\t\tcells[currentCell]--;\n\t\t\t\tbreak;\n\t\t\tcase Command.maraco:\n\t\t\t\tcells[currentCell] -= 2n;\n\t\t\t\tbreak;\n\t\t\tcase Command.weón:\n\t\t\t\tcells[currentCell]++;\n\t\t\t\tbreak;\n\t\t\tcase Command.aweonao:\n\t\t\t\tcells[currentCell] += 2n;\n\t\t\t\tbreak;\n\t\t\tcase Command.maraca:\n\t\t\t\tcells[currentCell] = 0n;\n\t\t\t\tbreak;\n\t\t\tcase Command.chucha:\n\t\t\t\tif (!currentCell) {\n\t\t\t\t\tctx.postMessage({\n\t\t\t\t\t\terrorMessage: \"Te saliste pa la izquierda, aweonao\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrentCell--;\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\tcase Command.puta:\n\t\t\t\tif (++currentCell === cells.length) {\n\t\t\t\t\tcells[currentCell] = 0n;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase Command.pichula:\n\t\t\t\tif (!cells[currentCell]) {\n\t\t\t\t\ti = findLoopEnd(e.data.commands, i);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\tcase Command.tula:\n\t\t\t\tif (cells[currentCell]) {\n\t\t\t\t\ti = findLoopStart(e.data.commands, i);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbreak;\t\n\t\t\tcase Command.pico:\n\t\t\t\ti = findLoopEnd(e.data.commands, i);\n\t\t\t\tbreak;\n\t\t\tcase Command.ctm:\n\t\t\t\tlet output = \"?\";\n\n\t\t\t\tif (cells[currentCell] >= 0x0 && cells[currentCell] <= 0x10FFFF) {\n\t\t\t\t\toutput = String.fromCodePoint(Number(cells[currentCell]));\n\t\t\t\t}\n\n\t\t\t\tctx.postMessage({\n\t\t\t\t\toutput\n\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\tcase Command.quéweá:\n\t\t\t\t/*\n\t\t\t\tif (this.readCommandIndex !== -1) {\n\t\t\t\t\tthis.isInputDisabled = true;\n\t\t\t\t\tthis.readCommandIndex = -1;\n\n\t\t\t\t\tif (this.input.length === 1 || this.input.length === 2) {\n\t\t\t\t\t\tconst codePoint = this.input.codePointAt(0);\n\n\t\t\t\t\t\tif (this.input.length === 1 || codePoint! >= 0x10000) {\n\t\t\t\t\t\t\tthis.cells[this.currentCell] = BigInt(codePoint);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.cells[this.currentCell] = 0n;\n\t\t\t\t} else {\n\t\t\t\t\tthis.isInputDisabled = false;\n\t\t\t\t\tthis.readCommandIndex = i;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t */\n\n\t\t\t\tbreak;\n\t\t\tcase Command.chúpala:\n\t\t\t\tctx.postMessage({\n\t\t\t\t\toutput: cells[currentCell].toString()\n\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\tcase Command.brígido:\n\t\t\t\tif (e.data.input) {\n\t\t\t\t\tctx.postMessage({\n\t\t\t\t\t\tisInputDisabled: true\n\t\t\t\t\t});\n\n\t\t\t\t\treadCommandIndex = -1;\n\n\t\t\t\t\tif (e.data.input.match(/^-?\\d{1,19}$/)) {\n\t\t\t\t\t\tconst bigInput = BigInt(e.data.input);\n\n\t\t\t\t\t\tif (bigInput >= -9223372036854775808n && bigInput <= 9223372036854775807n) {\n\t\t\t\t\t\t\tcells[currentCell] = bigInput;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcells[currentCell] = 0n;\n\t\t\t\t} else {\t\t\t\t\t\n\t\t\t\t\tctx.postMessage({\n\t\t\t\t\t\tisInputDisabled: false\n\t\t\t\t\t});\n\n\t\t\t\t\treadCommandIndex = i;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\tif (this.readCommandIndex !== -1) {\n\t\t\t\t\tthis.isInputDisabled = true;\n\t\t\t\t\tthis.readCommandIndex = -1;\n\n\t\t\t\t\tif (this.input.match(/^-?\\d{1,19}$/)) {\n\t\t\t\t\t\tconst bigInput = BigInt(this.input);\n\n\t\t\t\t\t\tif (bigInput >= -9223372036854775808n && bigInput <= 9223372036854775807n) {\n\t\t\t\t\t\t\tcells[currentCell] = bigInput;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcells[currentCell] = 0n;\n\t\t\t\t} else {\n\t\t\t\t\tthis.isInputDisabled = false;\n\t\t\t\t\tthis.readCommandIndex = i;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t */\n\n\t\t\t\tbreak;\n\t\t\tcase Command.perkin:\n\t\t\t\tif (isCopySet) {\n\t\t\t\t\tcells[currentCell] = cellValueCopy;\n\t\t\t\t\tisCopySet = false;\n\t\t\t\t} else {\n\t\t\t\t\tcellValueCopy = cells[currentCell];\n\t\t\t\t\tisCopySet = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\tcase Command.mierda:\n\t\t\t\treturn;\t\n\t\t}\n\t}\n\n\tfunction findLoopStart(commands: Command[], i: number): number {\n\t\tfor (let j = i - 1, loopLevel = 1; j >= 0; j--) {\n\t\t\tif (commands[j] === \"tula\") {\n\t\t\t\tloopLevel++;\n\t\t\t} else if (commands[j] === \"pichula\") {\n\t\t\t\tloopLevel--;\n\t\t\t}\n\t\t\t\n\t\t\tif (!loopLevel) {\n\t\t\t\treturn j;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\tfunction findLoopEnd(commands: Command[], i: number): number {\n\t\tfor (let j = i + 1, loopLevel = 1; j < commands.length; j++) {\n\t\t\tif (commands[j] === \"pichula\") {\n\t\t\t\tloopLevel++;\n\t\t\t} else if (commands[j] === \"tula\") {\n\t\t\t\tloopLevel--;\n\t\t\t}\n\t\t\t\n\t\t\tif (!loopLevel) {\n\t\t\t\treturn j;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n};\n"]}]}