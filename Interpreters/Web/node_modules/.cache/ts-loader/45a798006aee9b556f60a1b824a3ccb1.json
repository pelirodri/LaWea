{"remainingRequest":"/Users/pelirodri/Documents/laweavuetesting2/node_modules/ts-loader/index.js??ref--12-1!/Users/pelirodri/Documents/laweavuetesting2/src/components/TheMainSection/interpreter.worker.ts","dependencies":[{"path":"/Users/pelirodri/Documents/laweavuetesting2/src/components/TheMainSection/interpreter.worker.ts","mtime":1570596480958},{"path":"/Users/pelirodri/Documents/laweavuetesting2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pelirodri/Documents/laweavuetesting2/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Module from \"./run_commands\";\nconst ctx = self;\nconst appendPtr = Module.addFunction((stringPtr, isNumber) => {\n    ctx.postMessage({\n        charToAppend: Boolean(isNumber) ? Module.UTF8ToString(stringPtr) : Module.UTF32ToString(stringPtr)\n    });\n});\nconst inputDisabledPtr = Module.addFunction((isInputDisabled) => {\n    ctx.postMessage({\n        isInputDisabled: Boolean(isInputDisabled)\n    });\n});\nconst exitPtr = Module.addFunction((errorMessagePtr, shouldDisplayError) => {\n    ctx.postMessage({\n        errorMessage: Module.UTF8ToString(errorMessagePtr),\n        shouldDisplayError: Boolean(shouldDisplayError)\n    });\n});\nctx.onmessage = e => {\n    console.log(\"ðŸ¤”\");\n    if (typeof e.data.commands === \"object\") {\n        const typedCommands = new Uint8Array(e.data.commands);\n        const cmdPtr = Module._malloc(typedCommands.length * typedCommands.BYTES_PER_ELEMENT);\n        Module.HEAPU8.set(typedCommands, cmdPtr);\n        let bytesToWrite = 0;\n        let utf32Input = 0;\n        if (typeof e.data.input === \"string\") {\n            bytesToWrite = Module.lengthBytesUTF32(e.data.input);\n            utf32Input = Module._malloc(bytesToWrite + 4);\n            Module.stringToUTF32(e.data.input, utf32Input, bytesToWrite + 4);\n        }\n        const inputLen = bytesToWrite / 4;\n        Module._run_commands(cmdPtr, e.data.commands.length, utf32Input, inputLen, appendPtr, inputDisabledPtr, exitPtr);\n        console.log(\"Okay...\");\n        Module._free(cmdPtr);\n        if (typeof e.data.input === \"string\") {\n            Module._free(utf32Input);\n        }\n    }\n};\n",{"version":3,"file":"/Users/pelirodri/Documents/laweavuetesting2/src/components/TheMainSection/interpreter.worker.ts","sourceRoot":"","sources":["/Users/pelirodri/Documents/laweavuetesting2/src/components/TheMainSection/interpreter.worker.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,gBAAgB,CAAC;AAEpC,MAAM,GAAG,GAAW,IAAW,CAAC;AAEhC,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,SAAiB,EAAE,QAAgB,EAAE,EAAE;IAC5E,GAAG,CAAC,WAAW,CAAC;QACf,YAAY,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC;KAClG,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,MAAM,gBAAgB,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,eAAuB,EAAE,EAAE;IACvE,GAAG,CAAC,WAAW,CAAC;QACf,eAAe,EAAE,OAAO,CAAC,eAAe,CAAC;KACzC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,MAAM,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,eAAuB,EAAE,kBAA0B,EAAE,EAAE;IAC1F,GAAG,CAAC,WAAW,CAAC;QACf,YAAY,EAAE,MAAM,CAAC,YAAY,CAAC,eAAe,CAAC;QAClD,kBAAkB,EAAE,OAAO,CAAC,kBAAkB,CAAC;KAC/C,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE;IACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAElB,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;QACxC,MAAM,aAAa,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtD,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,GAAG,aAAa,CAAC,iBAAiB,CAAC,CAAC;QAEtF,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QAEzC,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnB,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAE;YACrC,YAAY,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACrD,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;YAE9C,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,EAAE,YAAY,GAAG,CAAC,CAAC,CAAC;SACjE;QAED,MAAM,QAAQ,GAAG,YAAY,GAAG,CAAC,CAAC;QAClC,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC;QAEjH,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEvB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAErB,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAE;YACrC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;SACzB;KACD;AACF,CAAC,CAAC","sourcesContent":["import Module from \"./run_commands\";\n\nconst ctx: Worker = self as any;\n\nconst appendPtr = Module.addFunction((stringPtr: number, isNumber: number) => {\n\tctx.postMessage({\n\t\tcharToAppend: Boolean(isNumber) ? Module.UTF8ToString(stringPtr) : Module.UTF32ToString(stringPtr)\n\t});\n});\n\nconst inputDisabledPtr = Module.addFunction((isInputDisabled: number) => {\n\tctx.postMessage({\n\t\tisInputDisabled: Boolean(isInputDisabled)\n\t});\n});\n\nconst exitPtr = Module.addFunction((errorMessagePtr: number, shouldDisplayError: number) => {\n\tctx.postMessage({\n\t\terrorMessage: Module.UTF8ToString(errorMessagePtr),\n\t\tshouldDisplayError: Boolean(shouldDisplayError)\n\t});\n});\n\nctx.onmessage = e => {\n\tconsole.log(\"ðŸ¤”\");\n\n\tif (typeof e.data.commands === \"object\") {\n\t\tconst typedCommands = new Uint8Array(e.data.commands);\n\t\tconst cmdPtr = Module._malloc(typedCommands.length * typedCommands.BYTES_PER_ELEMENT);\n\n\t\tModule.HEAPU8.set(typedCommands, cmdPtr);\n\n\t\tlet bytesToWrite = 0;\n\t\tlet utf32Input = 0;\n\n\t\tif (typeof e.data.input === \"string\") {\n\t\t\tbytesToWrite = Module.lengthBytesUTF32(e.data.input);\n\t\t\tutf32Input = Module._malloc(bytesToWrite + 4);\n\n\t\t\tModule.stringToUTF32(e.data.input, utf32Input, bytesToWrite + 4);\n\t\t}\t\n\n\t\tconst inputLen = bytesToWrite / 4;\n\t\tModule._run_commands(cmdPtr, e.data.commands.length, utf32Input, inputLen, appendPtr, inputDisabledPtr, exitPtr);\n\n\t\tconsole.log(\"Okay...\");\n\n\t\tModule._free(cmdPtr);\n\n\t\tif (typeof e.data.input === \"string\") {\n\t\t\tModule._free(utf32Input);\n\t\t}\n\t}\n};\n"]}]}