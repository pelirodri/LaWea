"Included scalars"
scalar JSON
scalar Upload

<% if (addExamples) { _%>
"It will increment!"
type Counter {
  "Number of increments"
  count: Int!
  "Full message for testing"
  countStr: String
}

"A text message send by users"
type Message {
  id: ID!
  "Message content"
  text: String!
}

"Input from user to create a message"
input MessageInput {
  "Message content"
  text: String!
}

type File {
  id: ID!
  path: String!
  filename: String!
  mimetype: String!
  encoding: String!
}
<%_ } %>

type Query {
  "Test query with a parameter"
  hello(name: String): String!
<% if (addExamples) { _%>
  "List of messages sent by users"
  messages: [Message]
  uploads: [File]
<%_ } %>
}

type Mutation {
  myMutation: String!
<% if (addExamples) { _%>
  "Add a message and publish it on 'messages' subscription channel"
  addMessage (input: MessageInput!): Message!
  singleUpload (file: Upload!): File!
  multipleUpload (files: [Upload!]!): [File!]!
<%_ } %>
}

type Subscription {
  mySub: String!
<% if (addExamples) { _%>
  "This will update every 2 seconds"
  counter: Counter!
  "When a new message is added"
  messageAdded: Message!
<%_ } %>
}
